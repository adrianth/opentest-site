<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://getopentest.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://getopentest.org/" rel="alternate" type="text/html" /><updated>2019-04-19T17:18:06-05:00</updated><id>https://getopentest.org/</id><title type="html">OpenTest</title><entry><title type="html">Database testing for improved test coverage and execution speed</title><link href="https://getopentest.org/blog/2018/11/26/database-testing.html" rel="alternate" type="text/html" title="Database testing for improved test coverage and execution speed" /><published>2018-11-26T00:00:00-06:00</published><updated>2018-11-26T00:00:00-06:00</updated><id>https://getopentest.org/blog/2018/11/26/database-testing</id><content type="html" xml:base="https://getopentest.org/blog/2018/11/26/database-testing.html">&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Database testing can mean different things for different people. This
article refers to the practice of verifying the correctness of the data stored
in relational databases as a result of executing an automated UI or API test.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Most non-trivial applications make use of a database to store and retrieve data.
In fact, as many of us find out the hard way, the database layer of an
application often makes the difference between a working system and a broken
one. This is why your automated tests will end up altering data in some
database, either directly or indirectly. It stands to reason that the usefulness
and effectiveness of automated tests can be significantly improved by inserting
database validation steps at strategically-placed points in the flow of a test.
Similarly, test execution speed can be improved by short-circuiting some of the
time-consuming steps in a test and replacing them with simple database update
statements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;OpenTest 1.0.8 introduces two keywords that can be leveraged to add database testing steps: &lt;a href=&quot;/reference/generic-keywords.html#jdbcquery&quot;&gt;JdbcQuery&lt;/a&gt; and &lt;a href=&quot;/reference/generic-keywords.html#jdbcupdate&quot;&gt;JdbcUpdate&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To be successful at database testing, you will need to:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Have basic familiarity with the SQL language and with relational database
concepts, in general.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are part of a QA group that is external to the dev team, you need a
good working relationship and communication channels with the developers, since
they are going to be the ones to help you decipher the &quot;internals&quot; of the
application logic and how it interacts with the database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tips, tricks and pitfalls:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Keep in mind that, once you touched the database (either to update it or
validate it), you just left the black-box testing space and stepped into the
potentially perilous realm of white-box testing. In order to be successful at
this you&amp;#8217;ll need to be fairly familiar with the inner workings of the
application under test, so you can properly identify the tables and fields that
are being used to store the data you are trying to get at.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to avoid depending on database structures that are likely to change often.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to replace database tests with API tests, if such APIs are available.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;a-practical-example&quot;&gt;A practical example&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author></entry></feed>